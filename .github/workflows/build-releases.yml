name: Create Release with Multiple Builds

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

permissions:
  contents: write
  actions: read

jobs:
  # Trigger the macOS ARM build
  build-macos-arm:
    uses: d-pacheco/PCMS/.github/workflows/macos-build-arm.yml@main

  # Trigger the macOS Intel build
  build-macos-intel:
    uses: d-pacheco/PCMS/.github/workflows/macos-build-intel.yml@main

  # Trigger the Windows build
  build-windows:
    uses: d-pacheco/PCMS/.github/workflows/windows-build.yml@main

  create-release:
    runs-on: ubuntu-latest
    needs: [build-macos-arm, build-macos-intel, build-windows]

    steps:
      - name: Download macOS ARM Artifact
        uses: actions/download-artifact@v4
        with:
          name: macOS-app-arm

      - name: Download macOS Intel Artifact
        uses: actions/download-artifact@v4
        with:
          name: macOS-app-intel

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-app

      - name: List dist contents
        run: ls -R dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: Release ${{ github.event.inputs.release_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Upload URL
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload macOS ARM Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: PCMS_arm
          asset_name: PCMS_arm
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Intel Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: PCMS_intel
          asset_name: PCMS_intel
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: PCMS_windows
          asset_name: PCMS_windows
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
